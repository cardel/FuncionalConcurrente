/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package paralelo

import scala.util.Random
import org.scalameter.withWarmer
import org.scalameter.measure
import org.scalameter.Warmer.Default

object App {
  def main(args: Array[String]): Unit = {
    println("El mergesort secuencial")
    val promedioSeq = (1 to 100).map(_ => 0.0).toArray
    for (i <- 0 until 100) {
      val mergeSort = new MergeSort()
      val vec = (1 to 1000).map(_ => Random.nextInt(10000)).toVector //Estoy generando 10000 numeros aleatorios entre 0 y 100000 y los guardo en un vector 
      val time = withWarmer(new Default) measure {
        mergeSort.mergeSortSeq(vec)
      }
      promedioSeq(i) = time.value
      println(" Repetición " + i + " tiempo: " + time)

    }
    //Mergesort paralelo
    println("El mergesort paralelo")
    val promedioPar = (1 to 100).map(_ => 0.0).toArray
    for (i <- 0 until 100) {
      val mergeSort = new MergeSort()
      val vec = (1 to 1000).map(_ => Random.nextInt(10000)).toVector //Estoy generando 10000 numeros aleatorios entre 0 y 100000 y los guardo en un vector 
      val time = withWarmer(new Default) measure {
      mergeSort.mergeSortPar(3)(0)(vec)
      }
      promedioPar(i) = time.value
      println(" Repetición " + i + " tiempo: " + time)
    }
    println("El promedio secuencial es: " + promedioSeq.sum / 100 + " ms")
    println("El promedio paralelo es: " + promedioPar.sum / 100 + " ms")
    println("La aceleración es: " + promedioSeq.sum / promedioPar.sum)
      
  }

  def greeting(): String = "Hello, world!"
}
